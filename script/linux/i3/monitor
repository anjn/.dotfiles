#!/usr/bin/env ruby

def apply_monitors(monitors, available_monitors)
  xrandr_command = "xrandr " + available_monitors.map {|x| "--output #{x} " + (monitors.include?(x) ? "--auto" : "--off") }.join(" ") + " --right-of eDP1"
  system(xrandr_command)
end

current_monitors = `xrandr --listmonitors | grep -v "Monitors:" | awk '{print $4}'`.strip.split(/\s+/)
available_monitors = `xrandr | grep -v disconnected | grep connected | awk '{print $1}'`.strip.split(/\s+/)

if ENV['BLOCK_BUTTON'] == "1"
  list = available_monitors.map {|x| [current_monitors.include?(x) ? "TRUE" : "FALSE", x] }.flatten.join(" ")
  new_monitors = `zenity --list --checklist --text "Select monitors" --separator ":" --column " " --column Monitor #{list} || true`.strip.split(/:/)
  unless new_monitors.empty?
    apply_monitors(new_monitors, available_monitors)
    current_monitors = new_monitors
  end
elsif ARGV[0] == "--toggle"
  modes = available_monitors.combination(1).to_a + available_monitors.combination(2).to_a
  modes.each_with_index do |m,i|
    if m == current_monitors
      apply_monitors(modes[(i+1)%modes.size], available_monitors)
    end
  end
end

puts current_monitors.join("/")
